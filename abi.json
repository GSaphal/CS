// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/AccessControl.sol";

contract WCOMAI is ERC20, AccessControl {
    bytes32 public constant MINTER_ROLE = keccak256("MINTER_ROLE");
    bytes32 public constant BURNER_ROLE = keccak256("BURNER_ROLE");

    constructor(string memory name, string memory symbol) ERC20(name, symbol) {
        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());
    }

    function mint(address to, uint256 amount) external returns (bool){
        require(hasRole(MINTER_ROLE, _msgSender()),
        "Caller is not a minter");
        _mint(to, amount);
        return true;
    }

    function burnFrom(address account, uint256 amount) external returns (bool){
        require(hasRole(BURNER_ROLE, _msgSender()),
        "Caller is not a burner");
        _burn(account, amount);
        return true;
    }
}